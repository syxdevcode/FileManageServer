@{
    ViewData["Title"] = "Home Page";
}

<link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script type="text/javascript" src="~/js/tus.min.js"></script>

<div class="form-horizontal" style="margin-top:80px;">
    <div class="form-group" id="progress-group" style="display:none;">
        <div id="size"></div>
        <div class="progress">
            <div id="progress" class="progress-bar progress-bar-success progress-bar-animated progress-bar-striped" role="progressbar"
                 aria-valuemin="0" aria-valuemax="100">
                <span id="percentage"></span>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            <input name="file" id="file" type="file" />
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="submit" value="上传" class="btn btn-success" />
            <input type="button" id="pause" value="暂停" class="btn btn-danger" />
            <input type="button" id="continue" value="继续" class="btn btn-info" />
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
        var upload;

        //上传
        $('#submit').click(function () {

            $('#progress-group').show();

            var file = $('#file')[0].files[0];

            // 创建tus上传对象
            upload = new tus.Upload(file, {
                // 文件服务器上传终结点地址设置
                endpoint: "files/",
                // 重试延迟设置
                retryDelays: [0, 3000, 5000, 10000, 20000],
                // 附件服务器所需的元数据
                metadata: {
                    name: file.name,
                    contentType: file.type || 'application/octet-stream',
                    emptyMetaKey: ''
                },
                // 回调无法通过重试解决的错误
                onError: function (error) {
                    console.log("Failed because: " + error)
                },
                // 上传进度回调
                onProgress: onProgress,
                // 上传完成后回调
                onSuccess: function () {
                    console.log("Download %s from %s", upload.file.name, upload.url)
                }
            })

            upload.start()
        });

        //暂停
        $('#pause').click(function () {
            upload.abort()
        });

        //继续
        $('#continue').click(function () {
            upload.start()
        });

        //上传进度展示
        function onProgress(bytesUploaded, bytesTotal) {
            var percentage = (bytesUploaded / bytesTotal * 100).toFixed(2);
            $('#progress').attr('aria-valuenow', percentage);
            $('#progress').css('width', percentage + '%');

            $('#percentage').html(percentage + '%');

            var uploadBytes = byteToSize(bytesUploaded);
            var totalBytes = byteToSize(bytesTotal);

            $('#size').html(uploadBytes + '/' + totalBytes);
        }

        //将字节转换为Byte、KB、MB等
        function byteToSize(bytes, separator = '', postFix = '') {
            if (bytes) {
                const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
                const i = Math.min(parseInt(Math.floor(Math.log(bytes) / Math.log(1024)).toString(), 10), sizes.length - 1);
                return `${(bytes / (1024 ** i)).toFixed(i ? 1 : 0)}${separator}${sizes[i]}${postFix}`;
            }
            return 'n/a';
        }
    });
</script>